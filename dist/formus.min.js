!function(){var formus=angular.module("formus",[]);formus.provider("FormusConfig",["$logProvider",function($logProvider){var getDefault=function(){return{showErrors:!0}},configs={form:function(){return{title:"",name:"",fieldset:{fields:[]},data:{},config:{showErrors:!0,readonly:!1,buttons:[],"class":"padding-top-10",submit:{"class":"btn btn-default",title:"Save",handler:function(){}}}}},fieldset:function(){return{showErrors:!1}},checkbox:function(){return{showLabel:!1,trueValue:!0,falseValue:!1,"default":!1}},checklist:function(){return{trueValue:!0,falseValue:!1,items:[]}},radio:function(){return{inline:!0}},radio:function(){return{horizontal:!1}},group:function(){return{"class":"bordered"}},button:function(){return{"class":"btn btn-primary",handler:function(){}}},file:function(){return{showLink:!0}},message:function(){return{type:"info"}}},set=function(name,config){"function"!=typeof config&&$logProvider.warn("Config must be callback"),configs[name]=config},getProvider=function(){var get=function(name){return configs[name]?configs[name]():getDefault()};return{get:get}};return{set:set,$get:["$log",getProvider]}}]),formus.provider("FormusContainer",function(){var log,helper,defaultConfig,container={};this.setContainer=function(data){container=data};var get=function(name){var form={};return angular.isUndefined(name)?log.error("Don't set form configuration name "):container[name]?(form=container[name],form.name||(form.name=name),angular.isDefined(form.parent)&&(form=helper.extendDeep(get(form.parent),angular.copy(form)))):log.error('Form configuration with name "'+name+"\" don't found in configuration container"),helper.extendDeep(angular.copy(defaultConfig),angular.copy(form))},set=this.set=function(name,value){container[name]=value};this.$get=["$log","FormusConfig","FormusHelper",function($log,FormusConfig,FormusHelper){return defaultConfig=FormusConfig.get("form"),log=$log,helper=FormusHelper,{get:get,set:set}}]}),formus.directive("formusField",["$injector","$http","$compile","$log","$templateCache","FormusLinker","FormusValidator","FormusHelper",function($injector,$http,$compile,$log,$templateCache,FormusLinker,FormusValidator,FormusHelper){return{transclude:!0,restrict:"E",scope:{config:"="},link:function($scope,$element,$attr){$scope.isValid=!0,$scope.dirty=!1,$scope.validation=function(value){angular.isObject($scope.config.validators)&&($scope.errors=[],angular.forEach($scope.config.validators,function(args,name){var error=FormusValidator.validate(name,value,$scope.config,args);null!==error&&_.isString(error)&&$scope.errors.push(error)}))},$scope.$on("Formus.validate",function(){$scope.config.hide?($scope.errors=[],$scope.isValid=!0):$scope.validation($scope.model),$scope.$emit("Formus.validated",$scope.isValid)});var init=function(){$scope.parentCtrl=$element.parent().controller("formus-field"),angular.isUndefined($scope.parentCtrl)&&($scope.parentCtrl=$element.parent().controller("formus-form")),$scope.parentScope=$scope.parentCtrl.getScope(),$scope.parentScope.$watch("model",function(newValue){$scope.model=FormusHelper.getNested(newValue,$scope.config.name)},!0),$scope.$watch("model",function(newValue,oldValue){newValue!==oldValue&&(FormusHelper.setNested($scope.parentScope.model,$scope.config.name,newValue),$scope.dirty=!0,$scope.validation(newValue))}),$scope.parentScope.$watch("errors",function(newValue){$scope.errors=FormusHelper.getNested(newValue,$scope.config.name)},!0),$scope.$watch("errors",function(newValue,oldValue){newValue!==oldValue&&($scope.isValid=!(Array.isArray(newValue)&&newValue.length>0),$scope.parentScope.errors=FormusHelper.setNested($scope.parentScope.errors,$scope.config.name,newValue))}),$scope.isParent=!angular.isUndefined($scope.config.fields),$scope.isParent&&_.isUndefined($scope.config.input)&&($scope.config.input="fieldset"),FormusLinker.call($scope.config.input,{$scope:$scope,$element:$element,$attr:$attr}),angular.isFunction($scope.config.linker)&&$injector.invoke($scope.config.linker,this,{$scope:$scope,$element:$element,$attr:$attr})},listener=$scope.$watch("config",function(){angular.isDefined($scope.config)&&(init(),listener())},!0)},controller:["$scope","$element",function($scope){this.getScope=function(){return $scope}}]}}]),formus.directive("formusForm",["$q","FormusLinker","FormusTemplates","FormusHelper",function($q,FormusLinker,FormusTemplates,FormusHelper){return{transclude:!0,replace:!0,restrict:"E",scope:{name:"@",fieldset:"=",errors:"=?",model:"=",config:"="},templateUrl:FormusTemplates.getUrl("form"),link:function($scope,$element,$attr){$scope.isValid=!0,$scope.errorList=[],$scope.$watch("errors",function(newValue){$scope.errorList=FormusHelper.getErrorsList(newValue),$scope.isValid=0===$scope.errorList.length},!0),FormusLinker.formLinker({$scope:$scope,$element:$element,$attr:$attr})},controller:["$scope","$element","$rootScope",function($scope,$element,$rootScope){$scope.callHandler=function(item){item.validate?$scope.validate().then(function(){angular.isFunction(item.handler())&&item.handler()},angular.noop):angular.isFunction(item.handler())&&item.handler()},this.getScope=function(){return $scope},$scope.validate=function(){var deferred=$q.defer(),fieldsAmount=$element.find("formus-field").length,validated=0,hasInvalid=!1,handler=function(event,isValid){validated++,hasInvalid=isValid?hasInvalid:!0,validated===fieldsAmount&&(hasInvalid?deferred.reject():deferred.resolve())};return $scope.$on("Formus.validated",handler),$scope.$broadcast("Formus.validate"),deferred.promise},$scope.submit=function(){$scope.validate().then(function(){angular.isFunction($scope.config.submit.handler)&&$scope.config.submit.handler()},angular.noop)},$rootScope.$on("Formus.validateForm",function(event,name){name===$scope.name&&$scope.validate().then(function(){$rootScope.$emit("Formus.validatedForm",!0)},function(){$rootScope.$emit("Formus.validatedForm",!1)})})}]}}]),formus.provider("FormusHelper",function(){var setConfigByName=function setConfigByName(self,path,prop,value){self.fieldset&&(self=self.fieldset);var target=self;angular.isString(path)&&(path=path.split(".")),path=path.length?path:!1,path?(self.name===path[0]&&path.shift(),0===path.length?setConfigByName(self,!1,prop,value):_.each(self.fields,function(item){setConfigByName(item,path,prop,value)})):target[prop]=value},getErrorsList=function(object){var errorList=[],addErrors=function(errors){Array.isArray(errors)?_.each(errors,function(item){errorList.push(item)}):_.each(errors,function(item){addErrors(item)})};return addErrors(object),errorList},extractBackendErrors=function(response){var errors={};return _.each(response.data,function(error){this[error.field]=[error.message]},errors),errors},extendDeep=function(dst,src){return _.merge(dst,src)},setNested=function(model,name,value){if(name){angular.isObject(model)||(model={});for(var result=model,keys=name.split("."),len=keys.length,i=0;len-1>i;i++){var key=keys[i];model[key]||(model[key]={}),model=model[key]}return model[keys[len-1]]=value,result}return model=value},getNested=function(model,name,defaultValue){if(defaultValue=angular.isDefined(defaultValue)?defaultValue:void 0,angular.isDefined(model)){if(name){if(angular.isObject(model)){var result=model,keys=name.split(".");for(i=0;i<keys.length;i++)if(result=result[keys[i]],angular.isUndefined(result))return defaultValue;return result}return defaultValue}return model}return defaultValue},initModel=function(model,field){var name=field.name;if(name){var currentModel=model,keys=name.split(".");if(keys.length>1){for(var i=0;i<keys.length-1;i++){var key=keys[i];angular.isUndefined(currentModel[key])&&(currentModel[key]={}),currentModel=currentModel[key]}name=keys[keys.length-1]}angular.isUndefined(currentModel[name])&&(currentModel[name]=field.fields?{}:""),angular.isDefined(field.default)&&(currentModel[name]=field.default),field.fields&&_.each(field.fields,function(field){currentModel[name]=initModel(currentModel[name],field)})}else angular.isUndefined(model)&&(model=field.fields?{}:""),angular.isDefined(field.default)&&(model=field.default),field.fields&&_.each(field.fields,function(field){model=initModel(model,field)});return model},extractItems=function(data,valueField,titleField,groupName){var list=[];return 4===arguments.length&&angular.isDefined(groupName)&&(data=data[groupName]),_.each(data,function(item){list.push({value:item[valueField],title:item[titleField]})}),list},methods={setConfigByName:setConfigByName,getErrorsList:getErrorsList,setNested:setNested,getNested:getNested,initModel:initModel,extendDeep:extendDeep,extractBackendErrors:extractBackendErrors,extractItems:extractItems};return{setMethod:function(name,method){methods[name]=method},$get:function(){return methods}}}),formus.provider("FormusLinker",function(){function getLinker(injector){return{call:function(type,args){injector.invoke(linkers.default,null,args),linkers.hasOwnProperty(type)&&injector.invoke(linkers[type],null,args),injector.invoke(linkers.loadTemplate,null,args)},formLinker:function(args){injector.invoke(linkers.form,null,args)}}}var loadTemplateLinker=function($scope,$element,$compile,FormusTemplates,$log){if($scope.config){$scope.setElementTemplate=function(templateData){$element.html(templateData),$compile($element.contents())($scope),angular.isFunction($scope.afterLoadTemplate)&&$scope.afterLoadTemplate()};var template=$scope.config.template;if(template)$scope.setElementTemplate(template);else{var templateName=$scope.config.templateName;if(templateName&&FormusTemplates.has(templateName))FormusTemplates.get(templateName).then(function(template){$scope.setElementTemplate(template)},function(){$log.error("Template type '"+templateName+"' not supported.")});else{var templateUrl=$scope.config.templateUrl;if(templateUrl)FormusTemplates.load(templateUrl).then(function(template){$scope.setElementTemplate(template)},null);else{var input=$scope.config.input;input&&FormusTemplates.has(input)&&FormusTemplates.get(input).then(function(template){$scope.setElementTemplate(template)},function(){$log.error("Template type '"+input+"' not supported.")})}}}}},defaultLinker=function($scope,FormusConfig){var defaultConfig=FormusConfig.get($scope.config.input);_.each(defaultConfig,function(value,name){angular.isUndefined($scope.config[name])&&($scope.config[name]=value)}),$scope.config.label&&angular.isUndefined($scope.config.showLabel)&&($scope.config.showLabel=!0)},formLinker=function($scope,FormusHelper){var listener=$scope.$watch("fieldset",function(){_.isUndefined($scope.fieldset)||($scope.model=FormusHelper.initModel($scope.model,$scope.fieldset),$scope.errors=$scope.errors||{},listener())})},linkers={loadTemplate:loadTemplateLinker,"default":defaultLinker,form:formLinker,wrapperLinker:loadTemplateLinker};return{setLinker:function(type,linker){linkers[type]=linker},$get:["$injector","$log",function($injector,$log){return getLinker($injector,$log)}]}}),formus.provider("FormusTemplates",function(){var q,cache,http,log,templateMap={form:"formus/form.html",wrapper:"formus/inputs/wrapper.html",radio:"formus/inputs/radio.html",checkbox:"formus/inputs/checkbox.html",checklist:"formus/inputs/checklist.html",hidden:"formus/inputs/hidden.html",select:"formus/inputs/select.html",textarea:"formus/inputs/textarea.html",textbox:"formus/inputs/textbox.html",fieldset:"formus/inputs/fieldset.html",button:"formus/inputs/button.html",label:"formus/inputs/label.html",message:"formus/inputs/message.html"},setTemplateUrl=function(name,templateUrl){angular.isString(name)?templateMap[name]=templateUrl:angular.forEach(name,function(templateUrl,name){setTemplateUrl(name,templateUrl)})},has=function(name){return"undefined"!=typeof templateMap[name]},getTemplateUrl=function(name){return templateMap[name]},load=function(templateUrl){var deferred=q.defer();return http.get(templateUrl,{cache:cache}).then(function(response){deferred.resolve(response.data)},function(){log.error("Problem with loading template for "+templateUrl),deferred.reject()}),deferred.promise},get=function(name){return load(getTemplateUrl(name))};return{setTemplateUrl:setTemplateUrl,$get:["$q","$http","$templateCache","$log",function($q,$http,$templateCache,$log){return q=$q,http=$http,cache=$templateCache,log=$log,{has:has,get:get,load:load,getUrl:getTemplateUrl}}]}}),formus.provider("FormusValidator",["$logProvider",function($logProvider){var validators={required:function(value,config,args){return value?null:args&&args.msg?args.msg:config.label+" cannot be blank"},email:function(value,config){var validateEmail=function(value){if(value){var pattern=/^(([^<>()[\]\\.,;:\s@\']+(\.[^<>()[\]\\.,;:\s@\']+)*)|(\'.+\'))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return pattern.test(value)}return!0};return validateEmail(value)?null:config.label+" must be a valid e-mail"},url:function(value,config){var validateLink=function(url){if(value){var pattern=new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$","i");return pattern.test(url)}return!0};return validateLink(value)?null:config.label+" must be a valid url"}},getProvider=function($log,$injector){function get(name){return validators[name]?validators[name]:void 0}function validate(validatorName,value,config,args){return validators[validatorName]?$injector.invoke(validators[validatorName],null,{value:value,config:config,args:args}):($log.warn("Don't find validator with name \""+validatorName+'"'),null)}return{get:get,validate:validate}},set=function(name,callback){angular.isFunction(callback)?validators[name]=callback:$logProvider.warn("Validator must be function. Can't set validator with name \""+name+'"')};return{set:set,$get:getProvider}}]),formus.directive("formusWrapper",["FormusTemplates","FormusLinker","$timeout",function(FormusTemplates){return{restrict:"AE",transclude:!0,templateUrl:FormusTemplates.getUrl("wrapper"),link:{post:function($scope){$scope.input=$scope.$$childHead.$$childHead}}}}])}(),angular.module("formus").run(["$templateCache",function($templateCache){$templateCache.put("formus/form.html",'<form role=form id={{name}} class={{config.class}} style={{config.style}} ng-submit=submit()><header><div ng-if="config.showErrors && !isValid" class="alert alert-danger"><ul><li ng-repeat="e in errorList" ng-bind=e></li></ul></div></header><formus-field config=fieldset class=special></formus-field><div class=clear-fix></div><footer><div ng-repeat="btn in config.buttons" class=pull-left><button class={{btn.class}} type=button ng-if=!btn.items ng-click=callHandler(btn)>{{btn.title}}</button><div class="btn-group margin-left-5" ng-if=btn.items><button class="{{btn.class}} dropdown-toggle" type=button data-toggle=dropdown>{{btn.title}} <span class=caret></span></button><ul class=dropdown-menu><li ng-repeat="item in btn.items"><a ng-click=callHandler(item)>{{item.title}}</a></li></ul></div></div><button ng-if=config.submit type=submit class={{config.submit.class}} ng-bind=config.submit.title></button></footer></form>'),$templateCache.put("formus/inputs/button.html","<button type=button class={{config.class}} ng-bind=config.title ng-click=config.handler()></button>"),$templateCache.put("formus/inputs/checkbox.html","<div class=checkbox><label><input type=checkbox ng-true-value={{config.trueValue}} ng-false-value={{config.falseValue}} ng-model=model name={{config.name}}>{{config.label}}</label></div>"),$templateCache.put("formus/inputs/checklist.html",'<div ng-if=!config.inline><div class=checkbox ng-repeat="item in config.items"><label><input ng-true-value={{config.trueValue}} ng-false-value={{config.falseValue}} name={{name}} type=checkbox ng-model=$parent.$parent.model[item.value]>{{item.title}}</label></div></div><div ng-if=config.inline><label class=checkbox-inline ng-repeat="item in config.items"><input ng-true-value={{config.trueValue}} ng-false-value={{config.falseValue}} name={{name}} type=checkbox ng-model=$parent.$parent.model[item.value]>{{item.title}}</label></div>'),$templateCache.put("formus/inputs/fieldset.html",'<div class={{config.class}}><formus-wrapper ng-repeat="field in config.fields" class={{config.wrapClass}}><formus-field config=field></formus-field></formus-wrapper></div>'),$templateCache.put("formus/inputs/message.html",'<div class="alert alert-{{config.type}} {{config.class}}">{{model}}</div>'),$templateCache.put("formus/inputs/radio.html",'<div ng-if=!config.inline><div class=radio ng-repeat="item in config.items"><label><input ng-value=item.value name={{name}} type=radio ng-model=$parent.$parent.model>{{item.title}}</label></div></div><div ng-if=config.inline><label class=radio-inline ng-repeat="item in config.items"><input ng-value=item.value name={{name}} type=radio ng-model=$parent.$parent.model>{{item.title}}</label></div>'),$templateCache.put("formus/inputs/select.html",'<select name={{config.name}} ng-model=model class=form-control ng-multiple=config.multiple style={{config.style}} id={{config.name}} ng-options="item.value as item.title for item in config.items"><option value ng-if=config.empty>{{config.empty}}</option></select>'),$templateCache.put("formus/inputs/textarea.html","<textarea ng-readonly=config.readonly class=form-control placeholder={{config.placeholder?config.placeholder:config.label}} rows={{config.rows}} ng-model=model name={{config.name}} id={{config.name}} style={{config.style}}>\n</textarea>"),$templateCache.put("formus/inputs/textbox.html","<div ng-class=\"{'input-group': config.addon}\"><div class=input-group-addon ng-if=config.addon ng-bind=config.addon></div><input ng-readonly=config.readonly ng-model=model class=form-control id={{config.name}} name={{config.name}} placeholder={{config.placeholder?config.placeholder:config.label}}></div>"),$templateCache.put("formus/inputs/wrapper.html",'<div class="form-group margin-bottom-5" ng-class="{\'has-error\': !input.isValid}"><label for={{input.config.name}} ng-if=input.config.showLabel ng-bind=input.config.label></label><div ng-transclude=""></div><span class=help-block ng-if=input.config.showErrors ng-repeat="e in input.errors" ng-bind=e></span></div>')}]);